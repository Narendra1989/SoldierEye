package BullsEye;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class BullsEyeLoadSavedShoot extends javax.swing.JFrame {

    /**
     * Creates new form BullsEyeLoadSavedShoot
     */
	
	public Model md = new Model();
	public Round r1 = new Round();
	public Integer shootid;
	
    public BullsEyeLoadSavedShoot() {
        initComponents();
        
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
        int iCoordX = (objDimension.width - this.getWidth()) / 2;
        int iCoordY = (objDimension.height - this.getHeight()) / 2;
        this.setLocation(iCoordX, iCoordY); 
        
    }

    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlnameofshoot = new javax.swing.JLabel();
        jlrange = new javax.swing.JLabel();
        jtspinner = new javax.swing.JSpinner();
        jltarget = new javax.swing.JLabel();
        jttarget = new javax.swing.JComboBox<>();
        jlammo = new javax.swing.JLabel();
        jtammo = new javax.swing.JComboBox<>();
        jtnameofshoot = new javax.swing.JComboBox<>();
        
        this.setTitle("Bulls Eye");
    	java.awt.Image image = Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("BULLS.png"));
    	ImageIcon icon = new ImageIcon(image);
    	this.setIconImage(icon.getImage());
    	
        jtnameofshoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               jtnameofshootActionPerformed(evt);                    
            }           
                       
        });        
        
      
      try {
               
               Class.forName("org.h2.Driver");
                Connection con = DriverManager.getConnection("jdbc:h2:~/BullsEyeDB","Rolta", "");
                Statement st = con.createStatement();
                //ResultSet rs = st.executeQuery("select * from BullseyeMain");
                ResultSet rs = st.executeQuery("select * from shoot");                
                while (rs.next()) {
                	jtnameofshoot.addItem(rs.getString("ShootName"));      
                }
      
       
        } catch (Exception e) {  
        		JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);  
        		System.exit(0);  
        }  
        
        jbok = new javax.swing.JButton();
        jbok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jbokActionPerformed(evt);                    
            }           
                       
        });
        
        jbtarget = new javax.swing.JButton();
        jbhelp = new javax.swing.JButton();
        jlloadsavedshoot = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlnameofshoot.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlnameofshoot.setText("<html><u>Name of the Shoot:</u></html>");

        jlrange.setText("<html><u>Range :</u></html>");

        jtspinner.setModel(new javax.swing.SpinnerNumberModel(1000, null, null, 1));
        jtspinner.setEnabled(false);

        jltarget.setText("<html><u>Target :</u></html>");
        jttarget.setToolTipText("");
        jttarget.setEnabled(false);
         

        jlammo.setText("<html><u>Ammunition :</u></html>");
        jtammo.setEnabled(false);
        

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtnameofshoot, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlnameofshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtspinner, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addComponent(jlrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(36, 36, 36)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jltarget, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                               .addComponent(jttarget, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(34, 34, 34)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jlammo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addComponent(jtammo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jlnameofshoot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtnameofshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jltarget, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlammo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlrange, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jtammo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jttarget)
                    .addComponent(jtspinner))
                .addGap(13, 13, 13))
        );

        jbok.setText("OK");

        jbtarget.setText("Cancel");        
        jbtarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jbtargetActionPerformed(evt);                                
            }
        });
        
        jbhelp.setText("Help");
        jbhelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jbhelpActionPerformed(evt);                                
            }
        });

        jlloadsavedshoot.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jlloadsavedshoot.setText("Load Saved Shoot");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jbok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtarget)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbhelp)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jlloadsavedshoot)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlloadsavedshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbok)
                    .addComponent(jbtarget)
                    .addComponent(jbhelp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>           
    
    private void jbokActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		this.dispose();
    		BullsEyeChart graph2 = new BullsEyeChart(md,r1);
    		graph2.setVisible(true);
    	}
    	catch(Exception e){
    		 e.printStackTrace();
    	};    	
    } 
    
    
    private void jbtargetActionPerformed(java.awt.event.ActionEvent evt) {
    	this.dispose();
    }
    
    
    private void jbhelpActionPerformed(java.awt.event.ActionEvent evt) {                                        

    	try {    	
    		
    		Runtime.getRuntime().exec("hh.exe ./res/Recording_Shoots.chm");
    	
    	} catch (Exception ex) {
    	ex.printStackTrace();
    	}
      
    } 

    
    
    
    private void jtnameofshootActionPerformed(java.awt.event.ActionEvent evt) { 
    
    	try {
                				
             	Class.forName("org.h2.Driver");
             	
                Connection con = DriverManager.getConnection("jdbc:h2:~/BullsEyeDB", "Rolta", "");
                Statement st = con.createStatement();
                ResultSet rs1 = st.executeQuery("select Shoot_ID from shoot where ShootName = '" + jtnameofshoot.getSelectedItem() + "'");                
                while (rs1.next()) {
                	shootid = rs1.getInt("Shoot_ID");                			
                }                
                rs1.close();                
                ResultSet rs = st.executeQuery("select shoot.ShootName,shoot.Tank_No,shoot.GunnerName,shoot.A_ID,shoot.R_ID, shoot.TargetDesc,shoot.range, shoot.Target, Ammunition.a_type from shoot, Ammunition where Shoot_ID  ='" + shootid + "'and Ammunition.a_id=shoot.a_id");                
                while (rs.next()) {                 
                           	                                
                		jttarget.removeAllItems();
		    			jtammo.removeAllItems();		    			
                        
		    			jtspinner.setValue(Double.valueOf(rs.getInt("shoot.range")));
		    					    			
                        jttarget.addItem(rs.getString("shoot.TargetDesc"));
                        jttarget.setSelectedIndex(0);
                        
                        jtammo.addItem(rs.getString("Ammunition.a_type"));	                                
                        jtammo.setSelectedIndex(0);                       
                        
                        md.settankno(rs.getInt("shoot.Tank_No"));
                        md.setshootid(shootid);
                        md.setShootname(rs.getString("shoot.ShootName"));	
                        md.setAmmunition(rs.getString("Ammunition.a_type"));                        
                        md.setRange(rs.getString("shoot.range"));                                        
                        md.setgridsize(rs.getInt("shoot.Target"));
                        md.setgunnername(rs.getString("shoot.GunnerName"));
                        md.setaid(rs.getInt("shoot.A_ID"));
                        md.setrid(rs.getInt("shoot.R_ID"));
                        md.setAddorLoad(1);
                                    
                        }                              
                        
        } catch (ClassNotFoundException e) {
                        e.printStackTrace();
        } catch (SQLException e) {
                        e.printStackTrace();
        }

}  
   
    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbhelp;
    private javax.swing.JButton jbok;
    private javax.swing.JButton jbtarget;
    private javax.swing.JLabel jlammo;
    private javax.swing.JLabel jlloadsavedshoot;
    private javax.swing.JLabel jlnameofshoot;
    private javax.swing.JLabel jlrange;
    private javax.swing.JLabel jltarget;
    private javax.swing.JComboBox<String> jtammo;
    private javax.swing.JComboBox<String> jtnameofshoot;
    private javax.swing.JSpinner jtspinner;
    private javax.swing.JComboBox<String> jttarget;
    // End of variables declaration                   
}
